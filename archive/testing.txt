==================================================================================================
		TESTING SCENARIOS
==================================================================================================
NOTE:	If config file name is config/<config_name>.txt, log files are named as follows -
			logs/<config_name>_olympus.log
			logs/<config_name>_replica.log
			logs/<config_name>_client.log

--------------------------------------------------------------------------------------------------
1.	DESCRIPTION	:	Sanity testing by failure free scenario with 3 replicas(t=1) and 3 clients.
	CONFIGFILES	:	no_failure_t1_c3.txt
	OTHER 		:	This test case verifies the complete mechanism along with checkpointing( with interval=3).
	OUTCOME 	:	PASS

--------------------------------------------------------------------------------------------------
2.	DESCRIPTION	:	Sanity testing by failure free scenario with 5 replicas(t=2) and 3 clients.
	CONFIGFILES	:	no_failure_t2_c3.txt
	OTHER 		:	This test case verifies the complete mechanism along with checkpointing( with interval=10).
	OUTCOME 	:	PASS

--------------------------------------------------------------------------------------------------
3.	DESCRIPTION	:	Testing retransmission by client and handling of the retransmission from cache by replicas, by skipping TAIL replica reply to client.
	CONFIGFILES	:	skip_tail_reply_t1_c2.txt
	OTHER 		:	skip_tail_reply = 1 is set in config file to inject this failure. Client Timeout value is kept reasonably high for result shuttle to reach all nodes.
	OUTCOME 	:	PASS

--------------------------------------------------------------------------------------------------
4.	DESCRIPTION	:	Testing retransmission by client and handling of the retransmission from cache by replicas, by skipping TAIL replica reply to client.
	CONFIGFILES	:	skip_tail_reply_t2_c2.txt
	OTHER 		:	skip_tail_reply = 1 is set in config file to inject this failure. Client Timeout value is kept reasonably high for result shuttle to reach all nodes.
	OUTCOME 	:	PASS

--------------------------------------------------------------------------------------------------
5.	DESCRIPTION	:	Testing retransmission by client and handling of the same by replicas by setting timers, by maiking TAIL sleep before sending response to client.
	CONFIGFILES	:	sleep_tail_reply_t1_c2.txt
	OTHER 		:	sleep_before_send = 1 (in secs) is set in config file to inject this failure. Client Timeout value is kept reasonably low for result shuttle not to reach all nodes.
	OUTCOME 	:	PASS

--------------------------------------------------------------------------------------------------
6.	DESCRIPTION	:	Testing retransmission by client and handling of the same by replicas by setting timers, by maiking TAIL sleep before sending response to client.
	CONFIGFILES	:	sleep_tail_reply_t2_c2.txt
	OTHER 		:	sleep_before_send = 1 (in secs) is set in config file to inject this failure. Client Timeout value is kept reasonably low for result shuttle not to reach all nodes.
	OUTCOME 	:	PASS

--------------------------------------------------------------------------------------------------
7.	DESCRIPTION	:	To verify pseudorandom code sanity and reproducibility, all clients run same pseudorandom workload and seed.
	CONFIGFILES	:	pseudorandom_all_same_t1_c3.txt
	OTHER 		:	3 Clients and t=1 configured for sanity and simplicity.
	OUTCOME 	:	PASS

--------------------------------------------------------------------------------------------------
8.	DESCRIPTION	:	Testing on more number of clients(10), to verify pseudorandom code sanity and reproducibility.
	CONFIGFILES	:	pseudorandom_all_same_t1_c10.txt
	OTHER 		:	10 Clients with 5 operations each; t=1 configured for replica side sanity and simplicity.
	OUTCOME 	:	PASS

--------------------------------------------------------------------------------------------------
9.	DESCRIPTION	:	Testing on more number of clients(10) and t=2, to verify pseudorandom code integrity and reproducibility.
	CONFIGFILES	:	pseudorandom_all_same_t2_c10.txt
	OTHER 		:	10 Clients with 5 operations each; t=2 configured for moderate replica side workload.
	OUTCOME 	:	PASS

--------------------------------------------------------------------------------------------------
10.	DESCRIPTION	:	Stress testing on more number of clients(10) with 100 operations on each client and t=2, to verify pseudorandom code integrity and reproducibility.
	CONFIGFILES	:	pseudorandom_stress_t2_c10_o100.txt
	OTHER 		:	Client timeout value is taken high to avoid flooding of system by retransmissions.
	OUTCOME 	:	PASS

--------------------------------------------------------------------------------------------------
11.	DESCRIPTION	:	Validating conditions for failure trigger and injecting failure accordingly.
	CONFIGFILES	:	client_request_condition_change_operation_failure_t1_c3.txt
	OTHER 		:	Running with 3 clients and t=1 for simplicity. Condition = client_request(0,2), Trigger Action = change_operation()
	OUTCOME 	:	PASS

--------------------------------------------------------------------------------------------------
12.	DESCRIPTION	:	Validating conditions for failure trigger and injecting failure accordingly.
	CONFIGFILES	:	client_request_condition_change_operation_failure_t2_c3.txt
	OTHER 		:	Running with 3 clients and t=2 for integrity. Condition = client_request(2,2), Trigger Action = change_operation()
	OUTCOME 	:	PASS

--------------------------------------------------------------------------------------------------
13.	DESCRIPTION	:	Validating conditions for failure trigger and injecting failure accordingly.
	CONFIGFILES	:	shuttle_condition_change_operation_failure_t2_c3.txt
	OTHER 		:	Running with 3 clients and t=2 for integrity.
	OUTCOME 	:	PASS

--------------------------------------------------------------------------------------------------
14.	DESCRIPTION	:	On 'checkpoint(1)' trigger, inject error 'drop()'
	CONFIGFILES	:	checkpoint_condition_drop_failure_t2_c3.txt
	OTHER 		:	Running with 3 clients and t=2 for integrity.
	OUTCOME 	:	PASS

--------------------------------------------------------------------------------------------------
15.	DESCRIPTION	:	On 'checkpoint(1)' trigger, inject error 'sleep(2)'
	CONFIGFILES	:	checkpoint_condition_sleep_failure_t2_c3.txt
	OTHER 		:	Running with 3 clients and t=2 for integrity.
	OUTCOME 	:	PASS

--------------------------------------------------------------------------------------------------
16.	DESCRIPTION	:	On 'checkpoint(1)' trigger, inject error 'crash()'
	CONFIGFILES	:	checkpoint_condition_crash_failure_t2_c3.txt
	OTHER 		:	Running with 3 clients and t=2 for integrity.
	OUTCOME 	:	PASS

--------------------------------------------------------------------------------------------------
17.	DESCRIPTION	:	On 'checkpoint(1)' trigger, inject error 'increment_slot()'
	CONFIGFILES	:	checkpoint_condition_increment_slot_failure_t2_c3_nonhead.txt
	OTHER 		:	Running with 3 clients and t=2 for integrity. Should have no effect, as this error in only for head.
	OUTCOME 	:	PASS

--------------------------------------------------------------------------------------------------
18.	DESCRIPTION	:	On 'client_request(1)' trigger, inject error 'increment_slot()'
	CONFIGFILES	:	client_request_condition_increment_slot_failure_t2_c3_head.txt
	OTHER 		:	Running with 3 clients and t=2 for integrity.
	OUTCOME 	:	PASS

--------------------------------------------------------------------------------------------------
19.	DESCRIPTION	:	On 'checkpoint(1)' trigger, inject error 'extra_op()'
	CONFIGFILES	:	checkpoint_condition_extra_op_failure_t2_c3_head.txt
	OTHER 		:	Running with 3 clients and t=2 for integrity.
	OUTCOME 	:	PASS

--------------------------------------------------------------------------------------------------
20.	DESCRIPTION	:	On 'shuttle(0,1)' trigger, inject error 'invalid_order_sig()'
	CONFIGFILES	:	shuttle_condition_invalid_order_failure_t2_c3.txt
	OTHER 		:	Running with 3 clients and t=2 for integrity.
	OUTCOME 	:	PASS

--------------------------------------------------------------------------------------------------
21.	DESCRIPTION	:	On 'shuttle(0,1)' trigger, inject error 'invalid_result_sig()'
	CONFIGFILES	:	shuttle_condition_invalid_result_failure_t2_c3.txt
	OTHER 		:	Running with 3 clients and t=2 for integrity.
	OUTCOME 	:	PASS

--------------------------------------------------------------------------------------------------
22.	DESCRIPTION	:	On 'completed_checkpoint(1)' trigger, inject error 'drop_checkpt_stmts()'
	CONFIGFILES	:	result_checkpt_condition_drop_chckpt_stat_failure_t2_c3.txt
	OTHER 		:	Running with 3 clients and t=2 for integrity.
	OUTCOME 	:	PASS

--------------------------------------------------------------------------------------------------
23.	DESCRIPTION	:	On 'wedge_request(1)' trigger, inject error 'truncate_history(3)'
	CONFIGFILES	:	wedge_condition_truncate_hist_failure_t2_c3.txt
	OTHER 		:	Running with 3 clients and t=2 for integrity.
	OUTCOME 	:	PASS

--------------------------------------------------------------------------------------------------
24.	DESCRIPTION	:	On 'get_running_state(1)' and 'catch_up(1) 'trigger, inject error 'sleep(3)'
	CONFIGFILES	:	running_state_catchup_condition_sleep_failure_t2_c3.txt
	OTHER 		:	Running with 3 clients and t=2 for integrity.
	OUTCOME 	:	PASS

--------------------------------------------------------------------------------------------------
25.	DESCRIPTION	:	On 'new_configuration(0)' trigger, inject error 'sleep(1)'
	CONFIGFILES	:	new_config_condition_sleep_failure_t1_c1.txt
	OTHER 		:	Running with 3 clients and t=2 for integrity.
	OUTCOME 	:	PASS

